From 39e643ccdd3394c97382f504531688777af1da8e Mon Sep 17 00:00:00 2001
From: Javad Rahimipetroudi <javad.rahimipetroudi@mind.be>
Date: Sun, 8 Dec 2024 11:30:00 +0100
Subject: [PATCH 4/5] modify codes

Signed-off-by: Javad Rahimipetroudi <javad.rahimipetroudi@mind.be>
---
 drivers/gpio/gpiolib-of.c               | 29 ++++++++++++-------------
 drivers/mfd/Kconfig                     | 10 +++++++++
 drivers/mfd/Makefile                    |  1 +
 drivers/net/ethernet/allwinner/Kconfig  |  8 +++++++
 drivers/net/ethernet/allwinner/Makefile |  2 ++
 drivers/net/phy/Kconfig                 |  8 +++++++
 drivers/net/phy/Makefile                |  1 +
 drivers/pwm/pwm-sunxi-enhance.c         |  4 +---
 include/linux/of_gpio.h                 | 18 +++++++++++++++
 9 files changed, 63 insertions(+), 18 deletions(-)

diff --git a/drivers/gpio/gpiolib-of.c b/drivers/gpio/gpiolib-of.c
index 880f1efcaca5..b100204c0344 100644
--- a/drivers/gpio/gpiolib-of.c
+++ b/drivers/gpio/gpiolib-of.c
@@ -25,21 +25,6 @@
 #include "gpiolib.h"
 #include "gpiolib-of.h"
 
-/*
- * This is Linux-specific flags. By default controllers' and Linux' mapping
- * match, but GPIO controllers are free to translate their own flags to
- * Linux-specific in their .xlate callback. Though, 1:1 mapping is recommended.
- */
-enum of_gpio_flags {
-	OF_GPIO_ACTIVE_LOW = 0x1,
-	OF_GPIO_SINGLE_ENDED = 0x2,
-	OF_GPIO_OPEN_DRAIN = 0x4,
-	OF_GPIO_TRANSITORY = 0x8,
-	OF_GPIO_PULL_UP = 0x10,
-	OF_GPIO_PULL_DOWN = 0x20,
-	OF_GPIO_PULL_DISABLE = 0x40,
-};
-
 /**
  * of_gpio_named_count() - Count GPIOs for a device
  * @np:		device node to count GPIOs for
@@ -426,6 +411,20 @@ static struct gpio_desc *of_get_named_gpiod_flags(const struct device_node *np,
 	return desc;
 }
 
+int of_get_named_gpio_flags(const struct device_node *np, const char *list_name,
+			    int index, enum of_gpio_flags *flags)
+{
+	struct gpio_desc *desc;
+
+	desc = of_get_named_gpiod_flags(np, list_name, index, flags);
+
+	if (IS_ERR(desc))
+		return PTR_ERR(desc);
+	else
+		return desc_to_gpio(desc);
+}
+EXPORT_SYMBOL_GPL(of_get_named_gpio_flags);
+
 /**
  * of_get_named_gpio() - Get a GPIO number to use with GPIO API
  * @np:		device node to get GPIO from
diff --git a/drivers/mfd/Kconfig b/drivers/mfd/Kconfig
index f9325bcce1b9..8b028102874b 100644
--- a/drivers/mfd/Kconfig
+++ b/drivers/mfd/Kconfig
@@ -203,6 +203,16 @@ config MFD_AC100
 	  This driver include only the core APIs. You have to select individual
 	  components like codecs or RTC under the corresponding menus.
 
+config MFD_AC200_SUNXI
+	tristate "X-Powers AC200 (Sunxi)"
+	select MFD_CORE
+	depends on I2C
+	depends on PWM_SUNXI_ENHANCE
+	help
+	  If you say Y here you get support for the X-Powers AC200 IC.
+	  This driver include only the core APIs. You have to select individual
+	  components like Ethernet PHY or RTC under the corresponding menus.
+
 config MFD_AXP20X
 	tristate
 	select MFD_CORE
diff --git a/drivers/mfd/Makefile b/drivers/mfd/Makefile
index 2a9f91e81af8..036483d6230b 100644
--- a/drivers/mfd/Makefile
+++ b/drivers/mfd/Makefile
@@ -145,6 +145,7 @@ obj-$(CONFIG_MFD_DA9052_SPI)	+= da9052-spi.o
 obj-$(CONFIG_MFD_DA9052_I2C)	+= da9052-i2c.o
 
 obj-$(CONFIG_MFD_AC100)		+= ac100.o
+obj-$(CONFIG_MFD_AC200_SUNXI)   += sunxi-ac200.o
 obj-$(CONFIG_MFD_AXP20X)	+= axp20x.o
 obj-$(CONFIG_MFD_AXP20X_I2C)	+= axp20x-i2c.o
 obj-$(CONFIG_MFD_AXP20X_RSB)	+= axp20x-rsb.o
diff --git a/drivers/net/ethernet/allwinner/Kconfig b/drivers/net/ethernet/allwinner/Kconfig
index 3e81059f8693..36d808810ca4 100644
--- a/drivers/net/ethernet/allwinner/Kconfig
+++ b/drivers/net/ethernet/allwinner/Kconfig
@@ -34,4 +34,12 @@ config SUN4I_EMAC
 	  To compile this driver as a module, choose M here.  The module
 	  will be called sun4i-emac.
 
+config SUNXI_GMAC
+    tristate "Allwinner GMAC support"
+	depends on ARCH_SUNXI
+	depends on OF
+	depends on AC200_PHY_SUNXI
+	select CRC32
+	select MII
+
 endif # NET_VENDOR_ALLWINNER
diff --git a/drivers/net/ethernet/allwinner/Makefile b/drivers/net/ethernet/allwinner/Makefile
index ddd5a5079e8a..56b9c434a5b8 100644
--- a/drivers/net/ethernet/allwinner/Makefile
+++ b/drivers/net/ethernet/allwinner/Makefile
@@ -4,3 +4,5 @@
 #
 
 obj-$(CONFIG_SUN4I_EMAC) += sun4i-emac.o
+sunxi_gmac-objs := sunxi_gmac_ops.o sunxi-gmac.o
+obj-$(CONFIG_SUNXI_GMAC) += sunxi_gmac.o
diff --git a/drivers/net/phy/Kconfig b/drivers/net/phy/Kconfig
index 01b235b3bb7e..a0b89c25605b 100644
--- a/drivers/net/phy/Kconfig
+++ b/drivers/net/phy/Kconfig
@@ -84,6 +84,14 @@ config AIR_EN8811H_PHY
 	help
 	  Currently supports the Airoha EN8811H PHY.
 
+config AC200_PHY_SUNXI
+	tristate "AC200 EPHY(Sunxi)"
+	depends on NVMEM
+	depends on OF
+	depends on MFD_AC200_SUNXI
+	help
+	  Fast ethernet PHY as found in X-Powers AC200(Sunxi) multi-function device.
+
 config AMD_PHY
 	tristate "AMD and Altima PHYs"
 	help
diff --git a/drivers/net/phy/Makefile b/drivers/net/phy/Makefile
index 90f886844381..dcf2286c08ba 100644
--- a/drivers/net/phy/Makefile
+++ b/drivers/net/phy/Makefile
@@ -33,6 +33,7 @@ obj-$(CONFIG_SFP)		+= sfp.o
 sfp-obj-$(CONFIG_SFP)		+= sfp-bus.o
 obj-y				+= $(sfp-obj-y) $(sfp-obj-m)
 
+obj-$(CONFIG_AC200_PHY_SUNXI)   += sunxi-ephy.o
 obj-$(CONFIG_ADIN_PHY)		+= adin.o
 obj-$(CONFIG_ADIN1100_PHY)	+= adin1100.o
 obj-$(CONFIG_AIR_EN8811H_PHY)   += air_en8811h.o
diff --git a/drivers/pwm/pwm-sunxi-enhance.c b/drivers/pwm/pwm-sunxi-enhance.c
index 1216cae54856..e21717dcb1a6 100644
--- a/drivers/pwm/pwm-sunxi-enhance.c
+++ b/drivers/pwm/pwm-sunxi-enhance.c
@@ -1114,7 +1114,7 @@ static int sunxi_pwm_probe(struct platform_device *pdev)
     return ret;
 }
 
-static int sunxi_pwm_remove(struct platform_device *pdev)
+static void sunxi_pwm_remove(struct platform_device *pdev)
 {
     struct pwm_chip *chip = platform_get_drvdata(pdev);
     struct sunxi_pwm_chip *pwm = to_sunxi_pwm_chip(chip);
@@ -1122,8 +1122,6 @@ static int sunxi_pwm_remove(struct platform_device *pdev)
     clk_disable(pwm->bus_clk);
     reset_control_assert(pwm->pwm_rst_clk);
     pwmchip_remove(chip);
-
-    return 0;
 }
 
 static int sunxi_pwm_suspend(struct platform_device *pdev, pm_message_t state)
diff --git a/include/linux/of_gpio.h b/include/linux/of_gpio.h
index d0f66a5e1b2a..71349cac1a67 100644
--- a/include/linux/of_gpio.h
+++ b/include/linux/of_gpio.h
@@ -15,6 +15,21 @@
 #include <linux/gpio.h>		/* FIXME: Shouldn't be here */
 #include <linux/of.h>
 
+/*
+ * This is Linux-specific flags. By default controllers' and Linux' mapping
+ * match, but GPIO controllers are free to translate their own flags to
+ * Linux-specific in their .xlate callback. Though, 1:1 mapping is recommended.
+ */
+enum of_gpio_flags {
+	OF_GPIO_ACTIVE_LOW = 0x1,
+	OF_GPIO_SINGLE_ENDED = 0x2,
+	OF_GPIO_OPEN_DRAIN = 0x4,
+	OF_GPIO_TRANSITORY = 0x8,
+	OF_GPIO_PULL_UP = 0x10,
+	OF_GPIO_PULL_DOWN = 0x20,
+	OF_GPIO_PULL_DISABLE = 0x40,
+};
+
 struct device_node;
 
 #ifdef CONFIG_OF_GPIO
@@ -22,6 +37,9 @@ struct device_node;
 extern int of_get_named_gpio(const struct device_node *np,
 			     const char *list_name, int index);
 
+extern int of_get_named_gpio_flags(const struct device_node *np,
+		const char *list_name, int index, enum of_gpio_flags *flags);
+
 #else /* CONFIG_OF_GPIO */
 
 #include <linux/errno.h>
-- 
2.47.1

